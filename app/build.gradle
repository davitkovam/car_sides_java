apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'

assert file(project.ext.ASSET_DIR + "/model.tflite").exists()
assert file(project.ext.ASSET_DIR + "/labels.txt").exists()

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.tensorflow.lite.examples.classification"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // TODO: Add an option to avoid compressing TF Lite model file
    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    // Build off of nightly TensorFlow Lite
    // TODO: Add TFLite dependencies
    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-support:0.0.0-nightly') { changing = true }
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    // Use local TensorFlow library
    // implementation 'org.tensorflow:tensorflow-lite-local:0.0.0'
}
repositories {
    mavenCentral()
}
